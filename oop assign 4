Aim : Dynamic binding of Polymorphism
//*************************Shape.java*************************//
import java.util.Scanner;
public abstract class Shape{
 double height,width;
 public double getHeight(){
 return height;
 }
 public void setHeigth (double height){
 this.height=height;
 }
 public double getWidth(){
 return width;
 }
 public void setwidth(double width){
this.width=width;
 }
 void input()
 {
 Scanner sc=new Scanner(System.in);
 System.out.println("Enter height:");
 height=sc.nextDouble();
 System.out.println("Enter width:");
 width=sc.nextDouble();
 }
 public abstract double compute_area();
}
//********************************Triangle.java*********************************//
public class Triangle extends Shape {
 double area;
 public double compute_area()
 {
 height=this.getHeight();
 width=this.getWidth();
 area = (height*width)/2;
 return area;
 }
}
//*********************************Rectangle.java*********************************//
public class Rectangle extends Shape 
{
 double area;
 public double compute_area()
 {
 height=this.getHeight();
 width=this.getWidth();
 area=height*width;
 return area; 
 }
}
//**********************************Area.java*********************************//
public class Area {
 public static void main(String[] args) 
{
 double area;
 Shape s;
 Rectangle r=new Rectangle();
 s=r;
 
 s.input();
 area =s.compute_area();
 
 System.out.println("Area of Rectangle :"+area);
 Triangle t=new Triangle();
 s=t;
 s.input();
 area=s.compute_area();
 System.out.println("Area of Triangle :"+area);
 }
}